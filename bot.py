import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import json
import os
import datetime
import pytz

API_TOKEN = "6866417541:AAGt08D0gZ7JdUypgFBuQU1D35SnwBKnhOI"
BIRTHDAYS_FILE = "birthdays.json"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è")],
        [KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É")],
        [KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –¥–∞—Ç—É")],
        [KeyboardButton(text="–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è")],
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    text = (
        "üëã <b>–ü—Ä–∏–≤–µ—Ç!</b>\n"
        "–Ø –±–æ—Ç –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è.\n"
        "\n<b>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—é –Ω–∏–∂–µ:</b>"
    )
    await message.answer(text, parse_mode="HTML", reply_markup=main_menu)

@dp.message(lambda m: m.text == "–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è")
async def menu_add(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú, –Ω–∞–ø—Ä–∏–º–µ—Ä: 01.06")
    dp.data = getattr(dp, 'data', {})
    dp.data[message.from_user.id] = 'add'

@dp.message(lambda m: m.text == "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É")
async def menu_edit(message: types.Message):
    await message.answer("–ù–∞–ø–∏—à–∏ –Ω–æ–≤—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú, –Ω–∞–ø—Ä–∏–º–µ—Ä: 01.06")
    dp.data = getattr(dp, 'data', {})
    dp.data[message.from_user.id] = 'edit'

@dp.message(lambda m: m.text == "–£–¥–∞–ª–∏—Ç—å –¥–∞—Ç—É")
async def menu_remove(message: types.Message):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await cmd_remove(message)

@dp.message(lambda m: m.text == "–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è")
async def menu_list(message: types.Message):
    await cmd_list(message)

@dp.message(Command("see_all"))
async def cmd_see_all(message: types.Message):
    print("–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /see_all")  # –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    # –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if message.from_user.username != "bless_santana":
        await message.answer("<i>–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</i>", parse_mode="HTML")
        return
    chat_id = -1001698289619
    if not os.path.exists(BIRTHDAYS_FILE):
        await message.answer("<i>–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –ø—É—Å—Ç.</i>", parse_mode="HTML")
        return
    with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    print(f"–ë—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(data)}")  # –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    for key, info in data.items():
        name = info.get("name", "–î—Ä—É–≥")
        test_text = f"<b>{name}</b>, —è –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å! (—Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)"
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞: {test_text}")  # –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        await bot.send_message(chat_id, test_text, parse_mode="HTML")
    await message.answer("<b>–¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.</b>", parse_mode="HTML")

@dp.message()
async def handle_text(message: types.Message):
    dp.data = getattr(dp, 'data', {})
    action = dp.data.get(message.from_user.id)
    if action == 'add':
        message.text = f"/add {message.text.strip()}"
        await cmd_add(message)
        dp.data[message.from_user.id] = None
    elif action == 'edit':
        message.text = f"/edit {message.text.strip()}"
        await cmd_edit(message)
        dp.data[message.from_user.id] = None

def save_birthday(user_id, date):
    if os.path.exists(BIRTHDAYS_FILE):
        with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
    else:
        data = {}
    data[str(user_id)] = date
    with open(BIRTHDAYS_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False)

@dp.message(Command("add"))
async def cmd_add(message: types.Message):
    parts = message.text.split()
    if len(parts) != 2:
        await message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ</b>\n<code>/add –î–î.–ú–ú</code>\n–ù–∞–ø—Ä–∏–º–µ—Ä: <code>/add 01.06</code>", parse_mode="HTML")
        return
    date = parts[1]
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    if len(date) != 5 or date[2] != "." or not date.replace(".", "").isdigit():
        await message.answer("<b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.</b>\n–ò—Å–ø–æ–ª—å–∑—É–π <code>–î–î.–ú–ú</code>, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>01.06</code>", parse_mode="HTML")
        return
    save_birthday(message.from_user.id, date)
    await message.answer(f"<b>–¢–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è {date} —Å–æ—Ö—Ä–∞–Ω—ë–Ω!</b>", parse_mode="HTML")

@dp.message(Command("list"))
async def cmd_list(message: types.Message):
    if not os.path.exists(BIRTHDAYS_FILE):
        await message.answer("<i>–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –ø—É—Å—Ç.</i>", parse_mode="HTML")
        return
    with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    if not data:
        await message.answer("<i>–°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –ø—É—Å—Ç.</i>", parse_mode="HTML")
        return
    text = "<b>üéÇ –°–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è:</b>"
    for user_id, date in data.items():
        name = "<b>(–í—ã)</b>" if str(user_id) == str(message.from_user.id) else ""
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤—ã
        if not name:
            try:
                user = await bot.get_chat(user_id)
                name = f"<b>{user.first_name}</b>"
            except Exception:
                name = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
        text += f"\n{name}: <code>{date}</code>"
    await message.answer(text, parse_mode="HTML")

@dp.message(Command("remove"))
async def cmd_remove(message: types.Message):
    if not os.path.exists(BIRTHDAYS_FILE):
        await message.answer("<i>–£ –≤–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.</i>", parse_mode="HTML")
        return
    with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    if str(message.from_user.id) in data:
        del data[str(message.from_user.id)]
        with open(BIRTHDAYS_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False)
        await message.answer("<b>–í–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–¥–∞–ª—ë–Ω.</b>", parse_mode="HTML")
    else:
        await message.answer("<i>–£ –≤–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.</i>", parse_mode="HTML")

@dp.message(Command("edit"))
async def cmd_edit(message: types.Message):
    parts = message.text.split()
    if len(parts) != 2:
        await message.answer("<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –Ω–æ–≤—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ</b>\n<code>/edit –î–î.–ú–ú</code>", parse_mode="HTML")
        return
    date = parts[1]
    if len(date) != 5 or date[2] != "." or not date.replace(".", "").isdigit():
        await message.answer("<b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.</b>\n–ò—Å–ø–æ–ª—å–∑—É–π <code>–î–î.–ú–ú</code>, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>01.06</code>", parse_mode="HTML")
        return
    if not os.path.exists(BIRTHDAYS_FILE):
        await message.answer("<i>–£ –≤–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.</i>", parse_mode="HTML")
        return
    with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    if str(message.from_user.id) in data:
        data[str(message.from_user.id)] = date
        with open(BIRTHDAYS_FILE, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False)
        await message.answer(f"<b>–í–∞—à–∞ –¥–∞—Ç–∞ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {date}.</b>", parse_mode="HTML")
    else:
        await message.answer("<i>–£ –≤–∞—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.</i>", parse_mode="HTML")

# –ù–æ–≤—ã–π birthday_checker –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
async def birthday_checker():
    chat_id = -1001698289619  # chat_id –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã
    wishes = {
        "–ö–∞–ª—å—è–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä": "–ü—É—Å—Ç—å —É–≥–ª–∏ –≤—Å–µ–≥–¥–∞ –±—É–¥—É—Ç –∂–∞—Ä–∫–∏–º–∏, –∞ –∫–∞–ª—å—è–Ω ‚Äî –≤–∫—É—Å–Ω—ã–º!",
        "–ë–∞—Å—Å–µ–π–Ω–¥–æ–Ω": "–ü—É—Å—Ç—å —Ç–≤–æ–π –±–∞—Å—Å–µ–π–Ω –±—É–¥–µ—Ç –≤—Å–µ–≥–¥–∞ –ø–æ–ª–æ–Ω –≤–µ—Å–µ–ª—å—è –∏ –¥—Ä—É–∑–µ–π!",
        "–ê—à–∫—É–¥–∏—à–∫–∞": "–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ —è—Ä–∫–∏–º, –∫–∞–∫ —Ç—ã!",
        "–í–∏–Ω–æ–¥–µ–ª": "–ü—É—Å—Ç—å –≤–∏–Ω–æ –ª—å—ë—Ç—Å—è —Ä–µ–∫–æ–π, –∞ –∂–∏–∑–Ω—å –±—É–¥–µ—Ç —Å–ª–∞–¥–∫–æ–π!",
        "–ß—É–ø–∏–∫": "–ü—É—Å—Ç—å –≤ –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç —Å—Ç–æ–ª—å–∫–æ –∂–µ —Ä–∞–¥–æ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ –≤ —Ç–≤–æ–∏—Ö —á—É–ø–∞-—á—É–ø—Å–∞—Ö!",
        "–†–∞–±–æ—Ç—è–≥–∞": "–ü—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–æ–ª—å–∫–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –∏ –±–æ–ª—å—à–∏–µ —É—Å–ø–µ—Ö–∏!",
        "–ü–∏–≤–æ–ø–æ–≥–ª–æ—Ç–∏—Ç–µ–ª—å": "–ü—É—Å—Ç—å –ø–∏–≤–æ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Ö–æ–ª–æ–¥–Ω—ã–º, –∞ –∫–æ–º–ø–∞–Ω–∏—è ‚Äî –≤–µ—Å—ë–ª–æ–π!",
        "–õ—è–ª—è": "–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –Ω–µ–∂–Ω–æ—Å—Ç—å—é –∏ –∑–∞–±–æ—Ç–æ–π! –ì—É–≥—É-–≥–∞–≥–∞!",
        "–°—Ç—Ä–∏–ø—Ç–∏–∑–µ—Ä—à–∞": "–ü—É—Å—Ç—å —Ç–∞–Ω—Ü—ã –±—É–¥—É—Ç —Å—Ç—Ä–∞—Å—Ç–Ω—ã–º–∏, –∞ –∞–ø–ª–æ–¥–∏—Å–º–µ–Ω—Ç—ã ‚Äî –≥—Ä–æ–º–∫–∏–º–∏!",
        "–ß–µ—Ä–Ω—ã–π —Ä—É—Å—Å–∫–∏–π": "–ü—É—Å—Ç—å –∫–æ–∫—Ç–µ–π–ª–∏ –±—É–¥—É—Ç –∫—Ä–µ–ø–∫–∏–º–∏, –∞ –≤–µ—á–µ—Ä–∞ ‚Äî –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º–∏!"
    }
    sent_today = set()
    while True:
        now = datetime.datetime.now(pytz.timezone('Europe/Moscow'))
        today = now.strftime("%d.%m")
        hour = now.hour
        minute = now.minute
        if hour == 17 and minute == 15 and today not in sent_today:
            if os.path.exists(BIRTHDAYS_FILE):
                with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
                    data = json.load(f)
                for key, info in data.items():
                    if info.get("date") == today:
                        name = info.get("name", "–î—Ä—É–≥")
                        nickname = info.get("nickname", "")
                        gender = info.get("gender", "male")
                        wish = wishes.get(nickname, "–ü—É—Å—Ç—å —Å–±—É–¥–µ—Ç—Å—è –≤—Å—ë –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ!")
                        if gender == "female":
                            text = (
                                f"ü•≥ –°–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç –¥–æ—Ä–æ–≥–∞—è üéâ <b>{name}</b>, "
                                f"—Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–∫ <b>{nickname}</b>! ü•Ç{wish} üéÅ"
                            )
                        else:
                            text = (
                                f"ü•≥ –°–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç –¥–æ—Ä–æ–≥–æ–π üéâ <b>{name}</b>, "
                                f"—Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ <b>{nickname}</b>! ü•Ç{wish} üéÅ"
                            )
                        await bot.send_message(chat_id, text, parse_mode="HTML")
            sent_today.add(today)
        elif hour != 17 or minute != 15:
            sent_today.discard(today)
        await asyncio.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

async def main():
    asyncio.create_task(birthday_checker())
    await dp.start_polling(bot)

if __name__ == "__main__":
    # –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –¥–∞—Ç
    with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    print("–¢–µ—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö:")
    for key, info in data.items():
        name = info.get("name", "–î—Ä—É–≥")
        nickname = info.get("nickname", "")
        gender = info.get("gender", "male")
        if gender == "female":
            text = f"–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –¥–æ—Ä–æ–≥–∞—è {name}, —Ç–∞–∫ –∂–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–∫ {nickname}!"
        else:
            text = f"–°–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω—É–µ—Ç —Å–≤–æ–π –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è –¥–æ—Ä–æ–≥–æ–π {name}, —Ç–∞–∫ –∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ {nickname}!"
        print(text)
    asyncio.run(main())
